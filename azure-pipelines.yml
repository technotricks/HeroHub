trigger:
  - infra
pool:
  vmImage: 'macOS-latest'

jobs:
  - job: Build
    displayName: 'Build Android Debug'

    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '21.6.2'
        displayName: 'Install Node.js'

      - script: |
          corepack enable 
          yarn set version stable
        displayName: 'Pre Dependancy'

      - script: yarn install
        displayName: 'Install Node.js dependencies with Yarn'

      - task: JavaToolInstaller@0
        inputs:
          versionSpec: '17'
          jdkArchitectureOption: 'x64'
          jdkSourceOption: 'PreInstalled'

      - script: |
          echo "export JAVA_HOME=$(java -XshowSettings:properties -version 2>&1 | grep 'java.home' | awk '{print $3}')" >> $BASH_ENV
          source $BASH_ENV
          java -version
        displayName: 'Set JAVA_HOME and Verify Java Version'

      - script: |
          java -version
          node -v
          yarn -v
          ls -la node_modules/@react-native-community/cli/build
          ls -la node_modules/@react-native-community/cli-platform-android
          ls -la node_modules
        displayName: 'Verify Node.js, Yarn, and Dependencies'

      # - task: Gradle@2
      #   inputs:
      #     gradleWrapperFile: 'android/gradlew'
      #     options: '--stacktrace --info'
      #     tasks: 'assembleDebug'
      #     workingDirectory: 'android'
      #   displayName: 'Build Android Debug APK'
      - task: AndroidSigning@3
        displayName: 'Sign APK'
        inputs:
          apkFiles: 'android/app/build/outputs/apk/release/*.apk'
          apksignerKeystoreFile: 'hero_release.keystore'
          apksignerKeystorePassword: '$(AndroidKeyStorePassword)'
          apksignerKeystoreAlias: '$(AndroidKeyAlias)'
          apksignerKeyPassword: '$(AndroidKeyAliasPassword)'

      - script: |
          echo "Build output files:"
          ls -R android/app/build/outputs/
        displayName: 'List Build Outputs'

      # - script: mv android/app/build/outputs/apk/debug/app-debug.apk ReactNativePipeline$(Build.BuildNumber).apk
      #   displayName: 'Rename apk'

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: 'android/app/build/outputs/apk/release'
          ArtifactName: 'android'
          publishLocation: 'Container'
        displayName: 'Publish APK to artifacts'

      # - task: PublishBuildArtifacts@1
      #   inputs:
      #     PathtoPublish: ReactNativePipeline$(Build.BuildNumber).apk
      #     artifactName: drop
      #     publishLocation: 'container'

      # - script: |
      #     cd android
      #     ls
      #     pwd
      #     ./gradlew assembleDebug
      #   displayName: 'Android Build'

    # - script: pwd
    #   displayName: 'Current directory'

    # - task: Gradle@2
    #   inputs:
    #     gradleWrapperFile: 'android/gradlew'
    #     options: 'clean'
    #     tasks: 'clean'
    #   displayName: 'Clean Gradle cache'
